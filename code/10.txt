Experiment Topic: Dynamic Programming

Experiment Name: To demonstrate the concept of Dynamic Programming

Problem1: Best time to buy and sell the stock

https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

Probem2: Climbing Stairs

https://leetcode.com/problems/climbing-stairs/



1.

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size(), maxProfit = 0;
        for(int i=0; i<n-1; i++){
            for(int j=i+1; j<n; j++){
                if(prices[j] - prices[i] > maxProfit){
                    maxProfit = prices[j] - prices[i];
                }
            }
        }
        return maxProfit;
    }
};


2.

class Solution {
public:
    int climbStairs(int n) {
        if(n<=2)
         return n;
        vector<int> dp(n+1);
        dp[0]=0;
        dp[1]=1;
        dp[2]=2;
        for(int i=3;i<=n;i++)
         dp[i]=dp[i-1]+dp[i-2];
        
        return dp[n];
    }
};